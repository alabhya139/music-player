{"version":3,"sources":["components/IconButton/styles.tsx","components/IconButton/index.tsx","components/MusicCover/styles.tsx","components/AudioPlayerContext/context.tsx","components/MusicCover/index.tsx","styles.tsx","components/Controls/styles.tsx","components/Controls/index.tsx","assets/images/maad_city.png","assets/images/Section_80.jpg","assets/images/kod.jpeg","assets/images/born_sinner.jpeg","constants/tracks.js","assets/tracks/money_trees.mp3","assets/tracks/hiiipower.mp3","assets/tracks/brackets.mp3","assets/tracks/land_of_snakes.mp3","App.tsx","reportWebVitals.ts","components/AudioPlayerContext/AudioPlayerProvider.tsx","components/AudioPlayerContext/index.tsx","index.tsx"],"names":["Container","styled","div","width","IconButton","children","onClickHandler","onClick","memo","CoverSection","CoverArt","img","SongInfoSection","SongStatus","SongTitle","ArtistName","AlbumName","ActionButtons","StyledFavouriteIcon","FavoriteIcon","active","StyledPlaylistAddIcon","PlaylistAddIcon","StyledShareIcon","ShareIcon","ControlsToggle","initialValue","isActionEnabled","setActionEnabled","isPlaying","setIsPlaying","trackIndex","setTrackIndex","trackProgress","setTrackProgress","toPrevTrack","toNextTrack","onScrub","onScrubEnd","currentPercentage","duration","AudioPlayerContext","createContext","useAudioPlayerContext","useContext","MusicCover","coverArtSrc","songStatus","songTitle","artistName","albumName","useState","isFavouriteActive","setFavouriteActive","isPlaylistAddActive","setPlaylistAddActive","isShareActive","setShareActive","prevState","src","AudioAction","LeftSection","CenterSection","RightSection","AudioSeek","AudioSeekControl","AudioSeekTimer","CurrentPlayTime","p","TotalPlayTime","StyledPauseIcon","PauseRoundedIcon","StyledPlayIcon","PlayArrowRoundedIcon","StyledChevronLeftIcon","ChevronLeftRoundedIcon","StyledChevronRightIcon","ChevronRightRoundedIcon","StyledSlider","Slider","StyledRepeatOneRoundedIcon","RepeatOneRoundedIcon","StyledRepeatRoundedIcon","RepeatRoundedIcon","StyledShuffleRoundedIcon","ShuffleRoundedIcon","StyledEqualizerRoundedIcon","EqualizerRoundedIcon","Controls","currentDuration","Date","toISOString","substr","totalDuration","fontSize","size","aria-label","valueLabelDisplay","onChange","_","value","onKeyUp","onMouseUp","valueLabelFormat","tracks","title","artist","album","audioSrc","image","MAAD_CITY","SECTION_80","KOD","BORN_SINNER","App","currentTrack","setCurrentTrack","useEffect","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","AudioPlayerProvider","setCurrentPercentage","audioRef","useRef","Audio","intervalRef","isReady","current","useCallback","length","startTimer","clearInterval","setInterval","ended","currentTime","play","pause","values","useMemo","Provider","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mNAMaA,EAAYC,IAAOC,IAAV,oWACX,gBAAGC,EAAH,EAAGA,MAAH,OAAgBA,EAAK,UAAMA,EAAN,MAAkB,UACtC,gBAAGA,EAAH,EAAGA,MAAH,OAAgBA,EAAK,UAAMA,EAAN,MAAkB,U,OCCnD,SAASC,EAAT,GAA4E,IAAtDC,EAAqD,EAArDA,SAAUF,EAA2C,EAA3CA,MAAOG,EAAoC,EAApCA,eACrC,OACE,cAACN,EAAD,CAAWG,MAAOA,EAAOI,QAASD,EAAlC,SACGD,IAKQG,I,0BAAAA,iBAAKJ,G,mDCPPJ,EAAYC,IAAOC,IAAV,uSAcTO,EAAeR,IAAOC,IAAV,0ZAeZQ,EAAWT,IAAOU,IAAV,yOAQRC,EAAkBX,IAAOC,IAAV,4EAKfW,EAAaZ,IAAOC,IAAV,8SAgBVY,EAAYb,IAAOC,IAAV,+OAaTa,EAAad,IAAOC,IAAV,+OAaVc,EAAYf,IAAOC,IAAV,+OAaTe,EAAgBhB,IAAOC,IAAV,8CAIbgB,EAAsBjB,YAAOkB,IAAPlB,CAAH,uJAMrB,qBAAGmB,OAAoB,uBAGrBC,EAAwBpB,YAAOqB,IAAPrB,CAAH,uJACvB,qBAAGmB,OAAoB,uBAQrBG,EAAkBtB,YAAOuB,IAAPvB,CAAH,uJACjB,qBAAGmB,OAAoB,uBAQrBK,EAAiBxB,IAAOC,IAAV,0RCrHrBwB,EAAyC,CAC7CC,iBAAiB,EACjBC,iBAAkB,aAClBC,WAAW,EACXC,aAAc,aACdC,WAAY,EACZC,cAAe,aACfC,cAAe,EACfC,iBAAkB,aAClBC,YAAa,aACbC,YAAa,aACbC,QAAS,aACTC,WAAY,aACZC,kBAAmB,EACnBC,SAAU,GAGNC,EAAqBC,wBAAchB,GAE5BiB,EAAwB,kBAAMC,qBAAWH,IAEvCA,ICff,SAASI,EAAT,GAMsB,IALpBC,EAKmB,EALnBA,YACAC,EAImB,EAJnBA,WACAC,EAGmB,EAHnBA,UACAC,EAEmB,EAFnBA,WACAC,EACmB,EADnBA,UACmB,EAC6BC,oBAAkB,GAD/C,mBACZC,EADY,KACOC,EADP,OAEiCF,oBAAkB,GAFnD,mBAEZG,EAFY,KAESC,EAFT,OAGqBJ,oBAAkB,GAHvC,mBAGZK,EAHY,KAGGC,EAHH,OAK2Bd,IAAtChB,EALW,EAKXA,gBAAiBC,EALN,EAKMA,iBAkBzB,OACE,eAAC,EAAD,YACID,GAAmB,cAACF,EAAD,CAAgBlB,QAlBlB,WACrBqB,GAAiB,SAAC8B,GAAD,OAAgBA,QAkB/B,cAACjD,EAAD,UACE,cAACC,EAAD,CAAUiD,IAAKb,MAEjB,eAAClC,EAAD,WACE,cAACC,EAAD,UAAakC,IACb,cAACjC,EAAD,UAAYkC,IACZ,cAACjC,EAAD,UAAakC,IACb,cAACjC,EAAD,UAAYkC,IACZ,eAACjC,EAAD,WACE,cAAC,EAAD,CAAYX,eAxBK,WACvB+C,GAAmB,SAACK,GAAD,OAAgBA,MAuB7B,SACE,cAACxC,EAAD,CAAqBE,OAAQgC,MAE/B,cAAC,EAAD,CAAY9C,eAvBO,WACzBiD,GAAqB,SAACG,GAAD,OAAgBA,MAsB/B,SACE,cAACrC,EAAD,CAAuBD,OAAQkC,MAEjC,cAAC,EAAD,CAAYhD,eAtBC,WACnBmD,GAAe,SAACC,GAAD,OAAgBA,MAqBzB,SACE,cAACnC,EAAD,CAAiBH,OAAQoC,eAQtBhD,I,6DAAAA,kBAAKqC,GCjFP7C,GAAYC,IAAOC,IAAV,6J,yKCeTF,GAAYC,IAAOC,IAAV,yYAQL,qBAAGyB,gBACE,QAAU,WASnBiC,GAAc3D,IAAOC,IAAV,wKASX2D,GAAc5D,IAAOC,IAAV,qDAIX4D,GAAgB7D,IAAOC,IAAV,wEAKb6D,GAAe9D,IAAOC,IAAV,oDAIZ8D,GAAY/D,IAAOC,IAAV,gHAOT+D,GAAmBhE,IAAOC,IAAV,4BAEhBgE,GAAiBjE,IAAOC,IAAV,mFAKdiE,GAAkBlE,IAAOmE,EAAV,2FAMfC,GAAgBpE,IAAOmE,EAAV,2FAMbE,GAAkBrE,YAAOsE,KAAPtE,CAAH,2XAiBfuE,GAAiBvE,YAAOwE,KAAPxE,CAAH,2XAiBdyE,GAAwBzE,YAAO0E,KAAP1E,CAAH,2XAiBrB2E,GAAyB3E,YAAO4E,KAAP5E,CAAH,+bAsBtB6E,GAAe7E,YAAO8E,KAAP9E,CAAH,mnBAyBZwB,GAAiBxB,IAAOC,IAAV,4RAed8E,GAA6B/E,YAAOgF,KAAPhF,CAAH,8JAW1BiF,GAA0BjF,YAAOkF,KAAPlF,CAAH,wMAavBmF,GAA2BnF,YAAOoF,KAAPpF,CAAH,qLAYxBqF,GAA6BrF,YAAOsF,KAAPtF,CAAH,8JC9MvC,SAASuF,KAAY,IAAD,EAad7C,IAXFf,EAFgB,EAEhBA,iBACAD,EAHgB,EAGhBA,gBACAE,EAJgB,EAIhBA,UACAC,EALgB,EAKhBA,aACAK,EANgB,EAMhBA,YACAC,EAPgB,EAOhBA,YACAC,EARgB,EAQhBA,QACAC,EATgB,EAShBA,WACAC,EAVgB,EAUhBA,kBACAN,EAXgB,EAWhBA,cACAO,EAZgB,EAYhBA,SAQIiD,EAAkB,IAAIC,KAAqB,IAAhBzD,GAC9B0D,cACAC,OAAO,GAAI,GACRC,EACJrD,EAAW,EACP,IAAIkD,KAAgB,IAAXlD,GAAiBmD,cAAcC,OAAO,GAAI,GACnD,QACN,OACE,eAAC,GAAD,CAAWjE,gBAAiBA,EAA5B,UACE,cAAC,GAAD,CAAgBpB,QAfG,WACrBqB,GAAiB,SAAC8B,GAAD,OAAgBA,QAe/B,eAACE,GAAD,WACE,eAACC,GAAD,WACE,cAACuB,GAAD,IACA,cAACJ,GAAD,OAEF,eAAClB,GAAD,WACE,cAAC,EAAD,CAAY3D,MAAO,GAAIG,eAAgB6B,EAAvC,SACE,cAACuC,GAAD,MAEF,cAAC,EAAD,CAAYvE,MAAO,GAAIG,eAtBZ,WACjBwB,GAAa,SAAC4B,GAAD,OAAgBA,MAqBvB,SACG7B,EACC,cAACyC,GAAD,CAAiBwB,SAAS,UAE1B,cAACtB,GAAD,CAAgBsB,SAAS,YAG7B,cAAC,EAAD,CAAY3F,MAAO,GAAIG,eAAgB8B,EAAvC,SACE,cAACwC,GAAD,SAGJ,eAACb,GAAD,WACE,cAACmB,GAAD,IACA,cAACI,GAAD,UAGJ,eAACtB,GAAD,WACE,cAACC,GAAD,UACE,cAACa,GAAD,CACEiB,KAAK,SACLC,aAAW,QACXC,kBAAkB,OAClBC,SAAU,SAACC,EAAGC,GACZ/D,EAAQ+D,IAEVC,QAAS/D,EACTgE,UAAWhE,EACX8D,MAAO7D,EACPgE,iBAAkBd,MAGtB,eAACvB,GAAD,WACE,cAACC,GAAD,UAAkBsB,IAClB,cAACpB,GAAD,UAAgBwB,aAOXrF,sBAAKgF,ICzGL,OAA0B,sCCA1B,OAA0B,uCCA1B,OAA0B,iCCA1B,OAA0B,yCCU5BgB,GAAS,CAClB,CACEC,MAAO,cACPC,OAAQ,iBACRC,MAAO,yBACPC,SCfS,IAA0B,wCDgBnCC,MAAOC,IAET,CACEL,MAAO,YACPC,OAAQ,iBACRC,MAAO,aACPC,SEtBS,IAA0B,sCFuBnCC,MAAOE,IAET,CACEN,MAAO,WACPC,OAAQ,UACRC,MAAO,MACPC,SG7BS,IAA0B,qCH8BnCC,MAAOG,IAET,CACIP,MAAO,qBACPC,OAAQ,UACRC,MAAO,+BACPC,SIpCO,IAA0B,2CJqCjCC,MAAOI,KKRAC,OArBf,WAAgB,IAAD,EAC2B/D,mBAA2BqD,GAAO,IAD7D,mBACNW,EADM,KACQC,EADR,KAELrF,EAAeY,IAAfZ,WAKR,OAHAsF,qBAAU,WACRD,EAAgBZ,GAAOzE,MACtB,CAACA,IAEF,eAAC,GAAD,WACE,cAAC,GAAD,CACEe,YAAaqE,EAAaN,MAC1B9D,WAAY,cACZC,UAAWmE,EAAaV,MACxBxD,WAAYkE,EAAaT,OACzBxD,UAAWiE,EAAaR,QAE1B,cAAC,GAAD,QCVSW,GAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCiJCQ,ICvJAA,GDWf,YAAuE,IAAxC1H,EAAuC,EAAvCA,SAAuC,EACxB8C,oBAAkB,GADM,mBAC7DxB,EAD6D,KAC5CC,EAD4C,OAEhCuB,mBAAS,GAFuB,mBAE7DpB,EAF6D,KAEjDC,EAFiD,OAG1BmB,mBAAS,GAHiB,mBAG7DlB,EAH6D,KAG9CC,EAH8C,OAIlCiB,oBAAS,GAJyB,mBAI7DtB,EAJ6D,KAIlDC,EAJkD,OAKlBqB,mBAAS,GALS,mBAK7DZ,EAL6D,KAK1CyF,EAL0C,KAO5DpB,EAAaJ,GAAOzE,GAApB6E,SAGFqB,EAAWC,iBAAO,IAAIC,MAAMvB,IAC5BwB,EAAcF,mBACdG,EAAUH,kBAAO,GAEvBb,qBAAU,WAAO,IACP7E,EAAayF,EAASK,QAAtB9F,SACRwF,EAAsB/F,EAAgBO,EAAY,OACjD,CAACP,IAEJ,IAAME,EAAcoG,uBAAY,WAE5BvG,EADED,EAAa,EAAI,EACLyE,GAAOgC,OAAS,EAEhBzG,EAAa,KAE5B,CAACA,IAEEK,EAAcmG,uBAAY,WAE5BvG,EADED,EAAayE,GAAOgC,OAAS,EACjBzG,EAAa,EAEb,KAEf,CAACA,IAEE0G,EAAaF,uBAAY,WAEzBH,EAAYE,SACdI,cAAcN,EAAYE,SAG5BF,EAAYE,QAAUK,aAAY,WAC5BV,EAASK,QAAQM,MACnBxG,IAEAF,EAAiB+F,EAASK,QAAQO,eAEnC,OACF,CAACzG,IAEJiF,qBAAU,WACJxF,GACFoG,EAASK,QAAQQ,OACjBL,KAEAR,EAASK,QAAQS,UAElB,CAAClH,EAAW4G,IAGfpB,qBAAU,WACRY,EAASK,QAAQS,QAEjBd,EAASK,QAAU,IAAIH,MAAMvB,GAC7B1E,EAAiB+F,EAASK,QAAQO,aAE9BR,EAAQC,SACVL,EAASK,QAAQQ,OACjBhH,GAAa,GACb2G,KAGAJ,EAAQC,SAAU,IAEnB,CAACvG,EAAY0G,EAAY7B,IAE5BS,qBAAU,WAER,OAAO,WACLY,EAASK,QAAQS,QACbX,EAAYE,SACdI,cAAcN,EAAYE,YAG7B,IAEH,IAAMjG,EAAUkG,uBAAY,SAACnC,GAEvBgC,EAAYE,SACdI,cAAcN,EAAYE,SAHiB,IAKrC9F,EAAayF,EAASK,QAAtB9F,SACRyF,EAASK,QAAQO,YAAezC,EAAQ,IAAO5D,EAC/CN,EAAiB+F,EAASK,QAAQO,eACjC,IAEGvG,EAAaiG,uBAAY,WAExB1G,GACHC,GAAa,GAEf2G,MACC,CAACA,EAAY5G,IAEVmH,EAASC,mBACb,iBAAO,CACLtH,kBACAC,mBACAG,aACAC,gBACAC,gBACAC,mBACAL,YACAC,eACAK,cACAC,cACAC,UACAC,aACAC,oBACAC,SAAUyF,EAASK,QAAQ9F,YAE7B,CACEb,EACAI,EACAE,EACAJ,EACAM,EACAC,EACAE,EACAD,EACAE,IAGJ,OACE,cAAC,EAAmB2G,SAApB,CAA6B9C,MAAO4C,EAApC,SACG3I,KE9IP8I,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,GAAD,UACE,cAAC,GAAD,QAGJC,SAASC,eAAe,SAM1BjC,O","file":"static/js/main.a45d8662.chunk.js","sourcesContent":["import styled from \"styled-components\";\n\ninterface IContainerProps {\n  width?: number;\n}\n\nexport const Container = styled.div<IContainerProps>`\n  width: ${({ width }) => (width ? `${width}px` : \"42px\")};\n  height: ${({ width }) => (width ? `${width}px` : \"42px\")};\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background: #f8f8f8;\n  border-radius: 60px;\n  margin-right: 24px;\n  box-shadow: -10px -10px 15px #ffffff, 10px 10px 10px rgba(0, 0, 0, 0.05),\n    inset 10px 10px 10px rgba(0, 0, 0, 0.05), inset -10px -10px 20px #ffffff;\n`;\n","import React, { memo } from \"react\";\nimport { Container } from \"./styles\";\n\ninterface IIconButtonProps {\n  children: React.ReactNode;\n  width?: number;\n  onClickHandler: VoidFunction;\n}\n\nfunction IconButton({ children, width, onClickHandler }: IIconButtonProps) {\n  return (\n    <Container width={width} onClick={onClickHandler}>\n      {children}\n    </Container>\n  );\n}\n\nexport default memo(IconButton);\n","import styled from \"styled-components\";\n\nimport FavoriteIcon from \"@mui/icons-material/Favorite\";\nimport PlaylistAddIcon from \"@mui/icons-material/PlaylistAdd\";\nimport ShareIcon from \"@mui/icons-material/Share\";\n\ninterface IIconProps {\n  active?: boolean;\n}\n\nexport const Container = styled.div`\n  width: 44vw;\n  height: 361px;\n  background: #f8f8f8;\n  border: 1px solid #ffffff;\n  box-sizing: border-box;\n  box-shadow: 40px 30px 80px rgba(54, 48, 116, 0.3);\n  border-radius: 60px;\n  display: flex;\n  padding: 50px;\n  z-index: 2;\n  position: relative;\n`;\n\nexport const CoverSection = styled.div`\n  width: calc(50%);\n  height: calc(100%);\n  background: #f8f8f8;\n  border-radius: 40px;\n  align-self: center;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  box-shadow: inset 10px 10px 10px rgba(0, 0, 0, 0.05),\n    inset -10px -10px 20px #ffffff;\n  filter: drop-shadow(-10px -10px 15px #ffffff)\n    drop-shadow(10px 10px 10px rgba(0, 0, 0, 0.05));\n`;\n\nexport const CoverArt = styled.img`\n  width: calc(100% - 30px);\n  height: calc(100% - 30px);\n  border-radius: 30px;\n  box-shadow: inset 10px 10px 15px rgba(255, 255, 255, 0.2);\n  filter: drop-shadow(5px 5px 10px rgba(37, 5, 57, 0.51));\n`;\n\nexport const SongInfoSection = styled.div`\n  width: calc(46% - 45px);\n  padding: 0 45px;\n`;\n\nexport const SongStatus = styled.div`\n  font-style: normal;\n  font-weight: normal;\n  font-size: 18px;\n  line-height: 21px;\n  display: flex;\n  align-items: center;\n  font-feature-settings: \"liga\" off;\n\n  color: #aeaeae;\n\n  text-shadow: 1px 1px 1px #ffffff;\n  margin-bottom: 40px;\n  margin-top: 16px;\n`;\n\nexport const SongTitle = styled.div`\n  font-style: normal;\n  font-weight: 900;\n  font-size: 24px;\n  line-height: 24px;\n  display: flex;\n  align-items: center;\n  font-feature-settings: \"liga\" off;\n\n  color: #86748d;\n  margin-bottom: 16px;\n`;\n\nexport const ArtistName = styled.div`\n  font-style: normal;\n  font-weight: 600;\n  font-size: 16px;\n  line-height: 20px;\n  display: flex;\n  align-items: center;\n  font-feature-settings: \"liga\" off;\n\n  color: #bfb9be;\n  margin-bottom: 16px;\n`;\n\nexport const AlbumName = styled.div`\n  font-style: normal;\n  font-weight: 500;\n  font-size: 14px;\n  line-height: 18px;\n  display: flex;\n  align-items: center;\n  font-feature-settings: \"liga\" off;\n\n  color: #bfb8be;\n  margin-bottom: 34px;\n`;\n\nexport const ActionButtons = styled.div`\n  display: flex;\n`;\n\nexport const StyledFavouriteIcon = styled(FavoriteIcon)<IIconProps>`\n  cursor: pointer;\n  &:hover {\n    transform: scale(1.1);\n    transition: transform 500ms ease-in;\n  }\n  color: ${({ active }) => (active ? `#7e74ed` : `#c7c5d0`)};\n`;\n\nexport const StyledPlaylistAddIcon = styled(PlaylistAddIcon)<IIconProps>`\n  color: ${({ active }) => (active ? `#7e74ed` : `#c7c5d0`)};\n  cursor: pointer;\n  &:hover {\n    transform: scale(1.1);\n    transition: transform 500ms ease-in;\n  }\n`;\n\nexport const StyledShareIcon = styled(ShareIcon)<IIconProps>`\n  color: ${({ active }) => (active ? `#7e74ed` : `#c7c5d0`)};\n  cursor: pointer;\n  &:hover {\n    transform: scale(1.1);\n    transition: transform 500ms ease-in;\n  }\n`;\n\nexport const ControlsToggle = styled.div`\n  width: 5px;\n  height: 80px;\n  background: #e1deea;\n  border-radius: 13px;\n  position: absolute;\n  right: 16px;\n  top: calc(50% - 40px);\n  cursor: pointer;\n  transition: background 100ms ease-in-out;\n  &:hover {\n    background: #cdc9d8;\n  }\n`;\n","// libs\nimport { createContext, useContext } from \"react\";\n\ninterface IAudioPlayerContextProps {\n  isActionEnabled: boolean;\n  setActionEnabled: React.Dispatch<React.SetStateAction<boolean>>;\n  isPlaying: boolean;\n  setIsPlaying: React.Dispatch<React.SetStateAction<boolean>>;\n  trackIndex: number;\n  setTrackIndex: React.Dispatch<React.SetStateAction<number>>;\n  trackProgress: number;\n  currentPercentage: number;\n  setTrackProgress: React.Dispatch<React.SetStateAction<number>>;\n  toPrevTrack: VoidFunction;\n  toNextTrack: VoidFunction;\n  onScrub: (value: number) => void;\n  onScrubEnd: VoidFunction;\n  audioRef?: React.MutableRefObject<HTMLAudioElement>;\n  duration: number;\n}\n\nconst initialValue: IAudioPlayerContextProps = {\n  isActionEnabled: true,\n  setActionEnabled: () => {},\n  isPlaying: false,\n  setIsPlaying: () => {},\n  trackIndex: 0,\n  setTrackIndex: () => {},\n  trackProgress: 0,\n  setTrackProgress: () => {},\n  toPrevTrack: () => {},\n  toNextTrack: () => {},\n  onScrub: () => {},\n  onScrubEnd: () => {},\n  currentPercentage: 0,\n  duration: 0,\n};\n\nconst AudioPlayerContext = createContext(initialValue);\n\nexport const useAudioPlayerContext = () => useContext(AudioPlayerContext);\n\nexport default AudioPlayerContext;\n","import IconButton from \"../../components/IconButton\";\nimport React, { memo, useState } from \"react\";\nimport {\n  Container,\n  CoverArt,\n  CoverSection,\n  SongInfoSection,\n  SongStatus,\n  SongTitle,\n  ArtistName,\n  AlbumName,\n  ActionButtons,\n  StyledFavouriteIcon,\n  StyledPlaylistAddIcon,\n  StyledShareIcon,\n  ControlsToggle,\n} from \"./styles\";\nimport { useAudioPlayerContext } from \"../AudioPlayerContext/context\";\n\ninterface IMusicCoverProps {\n  coverArtSrc: string;\n  songStatus: string;\n  songTitle: string;\n  artistName: string;\n  albumName: string;\n}\n\nfunction MusicCover({\n  coverArtSrc,\n  songStatus,\n  songTitle,\n  artistName,\n  albumName,\n}: IMusicCoverProps) {\n  const [isFavouriteActive, setFavouriteActive] = useState<boolean>(false);\n  const [isPlaylistAddActive, setPlaylistAddActive] = useState<boolean>(false);\n  const [isShareActive, setShareActive] = useState<boolean>(false);\n\n  const { isActionEnabled, setActionEnabled } = useAudioPlayerContext();\n\n  const toggleControls = () => {\n    setActionEnabled((prevState) => !prevState);\n  };\n\n  const favouriteHandler = () => {\n    setFavouriteActive((prevState) => !prevState);\n  };\n\n  const playlistAddHandler = () => {\n    setPlaylistAddActive((prevState) => !prevState);\n  };\n\n  const shareHandler = () => {\n    setShareActive((prevState) => !prevState);\n  };\n\n  return (\n    <Container>\n      {!isActionEnabled && <ControlsToggle onClick={toggleControls} />}\n      <CoverSection>\n        <CoverArt src={coverArtSrc} />\n      </CoverSection>\n      <SongInfoSection>\n        <SongStatus>{songStatus}</SongStatus>\n        <SongTitle>{songTitle}</SongTitle>\n        <ArtistName>{artistName}</ArtistName>\n        <AlbumName>{albumName}</AlbumName>\n        <ActionButtons>\n          <IconButton onClickHandler={favouriteHandler}>\n            <StyledFavouriteIcon active={isFavouriteActive} />\n          </IconButton>\n          <IconButton onClickHandler={playlistAddHandler}>\n            <StyledPlaylistAddIcon active={isPlaylistAddActive} />\n          </IconButton>\n          <IconButton onClickHandler={shareHandler}>\n            <StyledShareIcon active={isShareActive} />\n          </IconButton>\n        </ActionButtons>\n      </SongInfoSection>\n    </Container>\n  );\n}\n\nexport default memo(MusicCover);\n","import styled from \"styled-components\";\n\nexport const Container = styled.div`\n  height: 100vh;\n  width: 100vw;\n  background: #e2ddff;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n","import styled from \"styled-components\";\n\nimport PauseRoundedIcon from \"@mui/icons-material/PauseRounded\";\nimport ChevronLeftRoundedIcon from \"@mui/icons-material/ChevronLeftRounded\";\nimport ChevronRightRoundedIcon from \"@mui/icons-material/ChevronRightRounded\";\nimport RepeatOneRoundedIcon from \"@mui/icons-material/RepeatOneRounded\";\nimport RepeatRoundedIcon from \"@mui/icons-material/RepeatRounded\";\nimport ShuffleRoundedIcon from \"@mui/icons-material/ShuffleRounded\";\nimport EqualizerRoundedIcon from \"@mui/icons-material/EqualizerRounded\";\nimport PlayArrowRoundedIcon from \"@mui/icons-material/PlayArrowRounded\";\n\nimport Slider from \"@mui/material/Slider\";\n\ninterface IContainerProps {\n  isActionEnabled: boolean;\n}\n\nexport const Container = styled.div<IContainerProps>`\n  width: 44vw;\n  height: 260px;\n  background: #f7f7f7;\n  border: 1px solid #ffffff;\n  box-sizing: border-box;\n  box-shadow: 0px 60px 100px rgba(65, 44, 100, 0.3);\n  border-radius: 60px;\n  margin-left: ${({ isActionEnabled }) =>\n    isActionEnabled ? \"-48px\" : \"-44vw\"};\n  transition: margin 300ms ease-in-out;\n  padding: 40px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  position: relative;\n`;\n\nexport const AudioAction = styled.div`\n  margin-bottom: 54px;\n  margin-left: 24px;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  width: 80%;\n`;\n\nexport const LeftSection = styled.div`\n  margin-right: 24px;\n`;\n\nexport const CenterSection = styled.div`\n  display: flex;\n  align-items: center;\n`;\n\nexport const RightSection = styled.div`\n  margin-left: 24px;\n`;\n\nexport const AudioSeek = styled.div`\n  width: 80%;\n  margin-left: 24px;\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const AudioSeekControl = styled.div``;\n\nexport const AudioSeekTimer = styled.div`\n  display: flex;\n  justify-content: space-between;\n`;\n\nexport const CurrentPlayTime = styled.p`\n  font-size: 12px;\n  line-height: 15px;\n  color: #aa9bbe;\n`;\n\nexport const TotalPlayTime = styled.p`\n  font-size: 12px;\n  line-height: 15px;\n  color: #aa9bbe;\n`;\n\nexport const StyledPauseIcon = styled(PauseRoundedIcon)`\n  background: linear-gradient(\n    159.16deg,\n    #7e74ed 26.46%,\n    rgba(63, 45, 137, 0) 116.55%\n  );\n  box-shadow: inset 10px 10px 15px rgba(255, 255, 255, 0.2);\n  filter: drop-shadow(0px 5px 10px #372e98);\n  color: #ffffff;\n  border-radius: 60px;\n  &.MuiSvgIcon-root {\n    font-size: 38px;\n    padding: 8px;\n  }\n  cursor: pointer;\n`;\n\nexport const StyledPlayIcon = styled(PlayArrowRoundedIcon)`\n  background: linear-gradient(\n    159.16deg,\n    #7e74ed 26.46%,\n    rgba(63, 45, 137, 0) 116.55%\n  );\n  box-shadow: inset 10px 10px 15px rgba(255, 255, 255, 0.2);\n  filter: drop-shadow(0px 5px 10px #372e98);\n  color: #ffffff;\n  border-radius: 60px;\n  &.MuiSvgIcon-root {\n    font-size: 38px;\n    padding: 8px;\n  }\n  cursor: pointer;\n`;\n\nexport const StyledChevronLeftIcon = styled(ChevronLeftRoundedIcon)`\n  background: linear-gradient(\n    159.16deg,\n    #7e74ed 26.46%,\n    rgba(63, 45, 137, 0) 116.55%\n  );\n  box-shadow: inset 10px 10px 15px rgba(255, 255, 255, 0.2);\n  filter: drop-shadow(0px 5px 10px #372e98);\n  color: #ffffff;\n  border-radius: 60px;\n  &.MuiSvgIcon-root {\n    font-size: 28px;\n    padding: 2px;\n  }\n  cursor: pointer;\n`;\n\nexport const StyledChevronRightIcon = styled(ChevronRightRoundedIcon)`\n  background: linear-gradient(\n    159.16deg,\n    #7e74ed 26.46%,\n    rgba(63, 45, 137, 0) 116.55%\n  );\n  box-shadow: inset 10px 10px 15px rgba(255, 255, 255, 0.2);\n  filter: drop-shadow(0px 5px 10px #372e98);\n  color: #ffffff;\n  font-weight: 800;\n  border-radius: 60px;\n  &.MuiSvgIcon-root {\n    font-size: 28px;\n    padding: 2px;\n\n    path {\n      stroke-width: 8px;\n    }\n  }\n  cursor: pointer;\n`;\n\nexport const StyledSlider = styled(Slider)`\n  background: #dedde3;\n  box-shadow: -3px -3px 5px #ffffff, 3px 3px 5px rgba(0, 0, 0, 0.05),\n    inset 3px 3px 5px rgba(0, 0, 0, 0.05), inset -3px -3px 5px #ffffff;\n  border-radius: 37px;\n  display: flex;\n  &.MuiSlider-root {\n    color: #7e74ed;\n    padding: 4px 0;\n    height: 4px;\n    .MuiSlider-thumb {\n      border: 6px solid #fff;\n      box-sizing: content-box;\n      box-shadow: 0px 10px 10px rgb(0 0 0 / 15%),\n        inset 10px 10px 10px rgb(0 0 0 / 5%);\n    }\n    .MuiSlider-rail {\n      opacity: 0;\n    }\n    .MuiSlider-track {\n      left: 1% !important;\n    }\n  }\n`;\n\nexport const ControlsToggle = styled.div`\n  width: 5px;\n  height: 80px;\n  background: #e1deea;\n  border-radius: 13px;\n  position: absolute;\n  right: 16px;\n  top: calc(50% - 40px);\n  cursor: pointer;\n  transition: background 100ms ease-in-out;\n  &:hover {\n    background: #cdc9d8;\n  }\n`;\n\nexport const StyledRepeatOneRoundedIcon = styled(RepeatOneRoundedIcon)`\n  color: #c7c5d0;\n  cursor: pointer;\n  &.MuiSvgIcon-root {\n    font-size: 18px;\n  }\n  &:hover {\n    color: #cdc9d8;\n  }\n`;\n\nexport const StyledRepeatRoundedIcon = styled(RepeatRoundedIcon)`\n  color: #c7c5d0;\n  color: #c7c5d0;\n  margin-right: 32px;\n  cursor: pointer;\n  &.MuiSvgIcon-root {\n    font-size: 18px;\n  }\n  &:hover {\n    color: #cdc9d8;\n  }\n`;\n\nexport const StyledShuffleRoundedIcon = styled(ShuffleRoundedIcon)`\n  color: #c7c5d0;\n  margin-right: 32px;\n  cursor: pointer;\n  &.MuiSvgIcon-root {\n    font-size: 18px;\n  }\n  &:hover {\n    color: #cdc9d8;\n  }\n`;\n\nexport const StyledEqualizerRoundedIcon = styled(EqualizerRoundedIcon)`\n  color: #c7c5d0;\n  cursor: pointer;\n  &.MuiSvgIcon-root {\n    font-size: 18px;\n  }\n  &:hover {\n    color: #cdc9d8;\n  }\n`;\n","import React, { memo } from \"react\";\nimport { useAudioPlayerContext } from \"../AudioPlayerContext/context\";\nimport IconButton from \"../IconButton\";\nimport {\n  Container,\n  AudioAction,\n  LeftSection,\n  CenterSection,\n  RightSection,\n  AudioSeek,\n  AudioSeekControl,\n  AudioSeekTimer,\n  StyledPauseIcon,\n  StyledChevronLeftIcon,\n  StyledChevronRightIcon,\n  StyledSlider,\n  ControlsToggle,\n  CurrentPlayTime,\n  TotalPlayTime,\n  StyledRepeatOneRoundedIcon,\n  StyledRepeatRoundedIcon,\n  StyledShuffleRoundedIcon,\n  StyledEqualizerRoundedIcon,\n  StyledPlayIcon,\n} from \"./styles\";\n\nfunction Controls() {\n  const {\n    setActionEnabled,\n    isActionEnabled,\n    isPlaying,\n    setIsPlaying,\n    toPrevTrack,\n    toNextTrack,\n    onScrub,\n    onScrubEnd,\n    currentPercentage,\n    trackProgress,\n    duration,\n  } = useAudioPlayerContext();\n  const toggleControls = () => {\n    setActionEnabled((prevState) => !prevState);\n  };\n  const togglePlay = () => {\n    setIsPlaying((prevState) => !prevState);\n  };\n  const currentDuration = new Date(trackProgress * 1000)\n    .toISOString()\n    .substr(14, 5);\n  const totalDuration =\n    duration > 0\n      ? new Date(duration * 1000).toISOString().substr(14, 5)\n      : \"00:00\";\n  return (\n    <Container isActionEnabled={isActionEnabled}>\n      <ControlsToggle onClick={toggleControls} />\n      <AudioAction>\n        <LeftSection>\n          <StyledShuffleRoundedIcon />\n          <StyledRepeatOneRoundedIcon />\n        </LeftSection>\n        <CenterSection>\n          <IconButton width={44} onClickHandler={toPrevTrack}>\n            <StyledChevronLeftIcon />\n          </IconButton>\n          <IconButton width={72} onClickHandler={togglePlay}>\n            {isPlaying ? (\n              <StyledPauseIcon fontSize=\"large\" />\n            ) : (\n              <StyledPlayIcon fontSize=\"large\" />\n            )}\n          </IconButton>\n          <IconButton width={44} onClickHandler={toNextTrack}>\n            <StyledChevronRightIcon />\n          </IconButton>\n        </CenterSection>\n        <RightSection>\n          <StyledRepeatRoundedIcon />\n          <StyledEqualizerRoundedIcon />\n        </RightSection>\n      </AudioAction>\n      <AudioSeek>\n        <AudioSeekControl>\n          <StyledSlider\n            size=\"medium\"\n            aria-label=\"Small\"\n            valueLabelDisplay=\"auto\"\n            onChange={(_, value) => {\n              onScrub(value as number);\n            }}\n            onKeyUp={onScrubEnd}\n            onMouseUp={onScrubEnd}\n            value={currentPercentage}\n            valueLabelFormat={currentDuration}\n          />\n        </AudioSeekControl>\n        <AudioSeekTimer>\n          <CurrentPlayTime>{currentDuration}</CurrentPlayTime>\n          <TotalPlayTime>{totalDuration}</TotalPlayTime>\n        </AudioSeekTimer>\n      </AudioSeek>\n    </Container>\n  );\n}\n\nexport default memo(Controls);\n","export default __webpack_public_path__ + \"static/media/maad_city.2dae5c65.png\";","export default __webpack_public_path__ + \"static/media/Section_80.839e40ce.jpg\";","export default __webpack_public_path__ + \"static/media/kod.36726f7e.jpeg\";","export default __webpack_public_path__ + \"static/media/born_sinner.51d39cd6.jpeg\";","import MAAD_CITY from \"../assets/images/maad_city.png\";\nimport SECTION_80 from \"../assets/images/Section_80.jpg\";\nimport KOD from \"../assets/images/kod.jpeg\";\nimport BORN_SINNER from \"../assets/images/born_sinner.jpeg\";\n\nimport MAAD_CITY_MP3 from \"../assets/tracks/money_trees.mp3\";\nimport SECTION_80_MP3 from \"../assets/tracks/hiiipower.mp3\";\nimport KOD_MP3 from \"../assets/tracks/brackets.mp3\";\nimport BORN_SINNER_MP3 from \"../assets/tracks/land_of_snakes.mp3\";\n\nexport const tracks = [\n    {\n      title: \"Money Trees\",\n      artist: \"Kendrick Lamar\",\n      album: \"good kid, m.A.A.d city\",\n      audioSrc: MAAD_CITY_MP3,\n      image: MAAD_CITY,\n    },\n    {\n      title: \"HiiiPoWeR\",\n      artist: \"Kendrick Lamar\",\n      album: \"Section.80\",\n      audioSrc: SECTION_80_MP3,\n      image: SECTION_80,\n    },\n    {\n      title: \"BRACKETS\",\n      artist: \"J. Cole\",\n      album: \"KOD\",\n      audioSrc: KOD_MP3,\n      image: KOD,\n    },\n    {\n        title: \"LAnd of the Snakes\",\n        artist: \"J. Cole\",\n        album: \"Born Sinner (Deluxe Version)\",\n        audioSrc: BORN_SINNER_MP3,\n        image: BORN_SINNER,\n      }\n  ];","export default __webpack_public_path__ + \"static/media/money_trees.ff486b99.mp3\";","export default __webpack_public_path__ + \"static/media/hiiipower.fb6b4370.mp3\";","export default __webpack_public_path__ + \"static/media/brackets.1c1d5279.mp3\";","export default __webpack_public_path__ + \"static/media/land_of_snakes.b5f61f92.mp3\";","import React, { useEffect, useState } from \"react\";\nimport MusicCover from \"./components/MusicCover\";\nimport { Container } from \"./styles\";\n\nimport Controls from \"./components/Controls\";\nimport { useAudioPlayerContext } from \"./components/AudioPlayerContext/context\";\nimport { tracks } from \"./constants/tracks\";\n\nfunction App() {\n  const [currentTrack, setCurrentTrack] = useState<typeof tracks[0]>(tracks[0]);\n  const { trackIndex } = useAudioPlayerContext();\n\n  useEffect(() => {\n    setCurrentTrack(tracks[trackIndex]);\n  }, [trackIndex]);\n  return (\n    <Container>\n      <MusicCover\n        coverArtSrc={currentTrack.image}\n        songStatus={\"Now Playing\"}\n        songTitle={currentTrack.title}\n        artistName={currentTrack.artist}\n        albumName={currentTrack.album}\n      />\n      <Controls />\n    </Container>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React, {\n  useCallback,\n  useEffect,\n  useMemo,\n  useRef,\n  useState,\n} from \"react\";\nimport { tracks } from \"../../constants/tracks\";\nimport AudioPlayerContext from \"./context\";\n\ninterface IAudioPlayerProviderProps {\n  children: React.ReactNode;\n}\n\nfunction AudioPlayerProvider({ children }: IAudioPlayerProviderProps) {\n  const [isActionEnabled, setActionEnabled] = useState<boolean>(true);\n  const [trackIndex, setTrackIndex] = useState(0);\n  const [trackProgress, setTrackProgress] = useState(0);\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [currentPercentage, setCurrentPercentage] = useState(0);\n\n  const { audioSrc } = tracks[trackIndex];\n\n  // Refs\n  const audioRef = useRef(new Audio(audioSrc));\n  const intervalRef = useRef<ReturnType<typeof setInterval>>();\n  const isReady = useRef(false);\n\n  useEffect(() => {\n    const { duration } = audioRef.current;\n    setCurrentPercentage((trackProgress / duration) * 100);\n  }, [trackProgress]);\n\n  const toPrevTrack = useCallback(() => {\n    if (trackIndex - 1 < 0) {\n      setTrackIndex(tracks.length - 1);\n    } else {\n      setTrackIndex(trackIndex - 1);\n    }\n  }, [trackIndex]);\n\n  const toNextTrack = useCallback(() => {\n    if (trackIndex < tracks.length - 1) {\n      setTrackIndex(trackIndex + 1);\n    } else {\n      setTrackIndex(0);\n    }\n  }, [trackIndex]);\n\n  const startTimer = useCallback(() => {\n    // Clear any timers already running\n    if (intervalRef.current) {\n      clearInterval(intervalRef.current);\n    }\n\n    intervalRef.current = setInterval(() => {\n      if (audioRef.current.ended) {\n        toNextTrack();\n      } else {\n        setTrackProgress(audioRef.current.currentTime);\n      }\n    }, 1000);\n  }, [toNextTrack]);\n\n  useEffect(() => {\n    if (isPlaying) {\n      audioRef.current.play();\n      startTimer();\n    } else {\n      audioRef.current.pause();\n    }\n  }, [isPlaying, startTimer]);\n\n  // Handles cleanup and setup when changing tracks\n  useEffect(() => {\n    audioRef.current.pause();\n\n    audioRef.current = new Audio(audioSrc);\n    setTrackProgress(audioRef.current.currentTime);\n\n    if (isReady.current) {\n      audioRef.current.play();\n      setIsPlaying(true);\n      startTimer();\n    } else {\n      // Set the isReady ref as true for the next pass\n      isReady.current = true;\n    }\n  }, [trackIndex, startTimer, audioSrc]);\n\n  useEffect(() => {\n    // Pause and clean up on unmount\n    return () => {\n      audioRef.current.pause();\n      if (intervalRef.current) {\n        clearInterval(intervalRef.current);\n      }\n    };\n  }, []);\n\n  const onScrub = useCallback((value: number) => {\n    // Clear any timers already running\n    if (intervalRef.current) {\n      clearInterval(intervalRef.current);\n    }\n    const { duration } = audioRef.current;\n    audioRef.current.currentTime = (value / 100) * duration;\n    setTrackProgress(audioRef.current.currentTime);\n  }, []);\n\n  const onScrubEnd = useCallback(() => {\n    // If not already playing, start\n    if (!isPlaying) {\n      setIsPlaying(true);\n    }\n    startTimer();\n  }, [startTimer, isPlaying]);\n\n  const values = useMemo(\n    () => ({\n      isActionEnabled,\n      setActionEnabled,\n      trackIndex,\n      setTrackIndex,\n      trackProgress,\n      setTrackProgress,\n      isPlaying,\n      setIsPlaying,\n      toPrevTrack,\n      toNextTrack,\n      onScrub,\n      onScrubEnd,\n      currentPercentage,\n      duration: audioRef.current.duration,\n    }),\n    [\n      isActionEnabled,\n      trackIndex,\n      trackProgress,\n      isPlaying,\n      toPrevTrack,\n      toNextTrack,\n      onScrubEnd,\n      onScrub,\n      currentPercentage,\n    ]\n  );\n  return (\n    <AudioPlayerContext.Provider value={values}>\n      {children}\n    </AudioPlayerContext.Provider>\n  );\n}\n\nexport default AudioPlayerProvider;\n","// component\nimport AudioPlayerProvider from \"./AudioPlayerProvider\";\n\nexport default AudioPlayerProvider;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport AudioPlayerProvider from \"./components/AudioPlayerContext\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <AudioPlayerProvider>\n      <App />\n    </AudioPlayerProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}